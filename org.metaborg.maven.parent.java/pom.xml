<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>org.metaborg.maven.parent.java</artifactId>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.metaborg</groupId>
		<artifactId>org.metaborg.maven.parent</artifactId>
		<version>1.2.0-SNAPSHOT</version>
		<relativePath>../org.metaborg.maven.parent</relativePath>
	</parent>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-version}</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<debug>true</debug>
				</configuration>
			</plugin>
			<!-- Generate MANIFEST.MF from project, to make project available to Eclipse plugins. -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>${maven-bundle-version}</version>
				<extensions>true</extensions>
				<configuration>
					<manifestLocation>${manifest-location}</manifestLocation>
					<instructions>
						<!-- Fix names not to include the groupId. -->
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Name>${project.artifactId}</Bundle-Name>
						<!-- Replace SNAPSHOT in the manifest version with given qualifier. -->
						<Bundle-Version>$(replace;${project.version};-SNAPSHOT;.${forceContextQualifier})</Bundle-Version>
						<!-- Also export packages that contain '.impl', because it would exclude '.imploder' in jsglr. -->
						<Export-Package>*</Export-Package>
						<!-- Don't declare dependency on sun packages, they should be provided by the JVM. -->
						<Import-Package>
							!sun.misc,
							!sun.nio.cs,
							*
						</Import-Package>
						<!-- Don't generate uses declarations in exported packages. -->
						<_nouses>true</_nouses>
					</instructions>
				</configuration>
				<!-- Hook in manifest generation into the process-classes phase, because this is not automatically done for projects
					with 'jar' packaging. -->
				<executions>
					<execution>
						<id>bundle-manifest</id>
						<phase>process-classes</phase>
						<goals>
							<goal>manifest</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Add the generated MANIFEST.MF is used in the resulting JAR file. -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-version}</version>
				<configuration>
					<archive>
						<manifestFile>${manifest-location}/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
